create_clock -period 10.000 -name sys_clk_pin -waveform {0.000 5.000} -add [get_ports clk]
create_clock -period 100.000 -name tck_dmi -add [get_pins tap/tap_dmi/TCK]
create_clock -period 100.000 -name tck_dtmcs -add [get_pins tap/tap_dtmcs/TCK]
create_clock -period 100.000 -name tck_idcode -add [get_pins tap/tap_idcode/DRCK]

#FIXME: Improve this later but hopefully ok for now.
#Since the JTAG clock is slow and bits 0 and 1 are properly synced, we can be a bit careless about the rest
set_false_path -from [get_cells -regexp {tap/dtmcs_r_reg\[([2-9]|[1-9][0-9])\]}]

#set_false_path -from  [get_cells ddr2/serial_tx_reg]

set_property -dict {PACKAGE_PIN E3 IOSTANDARD LVCMOS33} [get_ports clk]

set_property -dict {PACKAGE_PIN C12 IOSTANDARD LVCMOS33} [get_ports rstn]

set_property -dict {PACKAGE_PIN C4 IOSTANDARD LVCMOS33} [get_ports i_uart_rx]
set_property -dict {PACKAGE_PIN D4 IOSTANDARD LVCMOS33} [get_ports o_uart_tx]


set_property -dict {PACKAGE_PIN K17 IOSTANDARD LVCMOS33} [get_ports o_flash_mosi]
set_property -dict {PACKAGE_PIN K18 IOSTANDARD LVCMOS33} [get_ports i_flash_miso]
#set_property -dict { PACKAGE_PIN L14   IOSTANDARD LVCMOS33 } [get_ports { QSPI_DQ[2] }]; #IO_L2P_T0_D02_14 Sch=qspi_dq[2]
#set_property -dict { PACKAGE_PIN M14   IOSTANDARD LVCMOS33 } [get_ports { QSPI_DQ[3] }]; #IO_L2N_T0_D03_14 Sch=qspi_dq[3]
set_property -dict {PACKAGE_PIN L13 IOSTANDARD LVCMOS33} [get_ports o_flash_cs_n]

set_property -dict {PACKAGE_PIN J15 IOSTANDARD LVCMOS33} [get_ports {i_sw[0]}]
set_property -dict {PACKAGE_PIN L16 IOSTANDARD LVCMOS33} [get_ports {i_sw[1]}]
set_property -dict {PACKAGE_PIN M13 IOSTANDARD LVCMOS33} [get_ports {i_sw[2]}]
set_property -dict {PACKAGE_PIN R15 IOSTANDARD LVCMOS33} [get_ports {i_sw[3]}]
set_property -dict {PACKAGE_PIN R17 IOSTANDARD LVCMOS33} [get_ports {i_sw[4]}]
set_property -dict {PACKAGE_PIN T18 IOSTANDARD LVCMOS33} [get_ports {i_sw[5]}]
set_property -dict {PACKAGE_PIN U18 IOSTANDARD LVCMOS33} [get_ports {i_sw[6]}]
set_property -dict {PACKAGE_PIN R13 IOSTANDARD LVCMOS33} [get_ports {i_sw[7]}]
set_property -dict {PACKAGE_PIN T8 IOSTANDARD LVCMOS18} [get_ports {i_sw[8]}]
set_property -dict {PACKAGE_PIN U8 IOSTANDARD LVCMOS18} [get_ports {i_sw[9]}]
set_property -dict {PACKAGE_PIN R16 IOSTANDARD LVCMOS33} [get_ports {i_sw[10]}]
set_property -dict {PACKAGE_PIN T13 IOSTANDARD LVCMOS33} [get_ports {i_sw[11]}]
set_property -dict {PACKAGE_PIN H6 IOSTANDARD LVCMOS33} [get_ports {i_sw[12]}]
set_property -dict {PACKAGE_PIN U12 IOSTANDARD LVCMOS33} [get_ports {i_sw[13]}]
set_property -dict {PACKAGE_PIN U11 IOSTANDARD LVCMOS33} [get_ports {i_sw[14]}]
set_property -dict {PACKAGE_PIN V10 IOSTANDARD LVCMOS33} [get_ports {i_sw[15]}]

set_property -dict {PACKAGE_PIN H17 IOSTANDARD LVCMOS33} [get_ports {o_led[0]}]
set_property -dict {PACKAGE_PIN K15 IOSTANDARD LVCMOS33} [get_ports {o_led[1]}]
set_property -dict {PACKAGE_PIN J13 IOSTANDARD LVCMOS33} [get_ports {o_led[2]}]
set_property -dict {PACKAGE_PIN N14 IOSTANDARD LVCMOS33} [get_ports {o_led[3]}]
set_property -dict {PACKAGE_PIN R18 IOSTANDARD LVCMOS33} [get_ports {o_led[4]}]
set_property -dict {PACKAGE_PIN V17 IOSTANDARD LVCMOS33} [get_ports {o_led[5]}]
set_property -dict {PACKAGE_PIN U17 IOSTANDARD LVCMOS33} [get_ports {o_led[6]}]
set_property -dict {PACKAGE_PIN U16 IOSTANDARD LVCMOS33} [get_ports {o_led[7]}]
set_property -dict {PACKAGE_PIN V16 IOSTANDARD LVCMOS33} [get_ports {o_led[8]}]
set_property -dict {PACKAGE_PIN T15 IOSTANDARD LVCMOS33} [get_ports {o_led[9]}]
set_property -dict {PACKAGE_PIN U14 IOSTANDARD LVCMOS33} [get_ports {o_led[10]}]
set_property -dict {PACKAGE_PIN T16 IOSTANDARD LVCMOS33} [get_ports {o_led[11]}]
set_property -dict {PACKAGE_PIN V15 IOSTANDARD LVCMOS33} [get_ports {o_led[12]}]
set_property -dict {PACKAGE_PIN V14 IOSTANDARD LVCMOS33} [get_ports {o_led[13]}]
set_property -dict {PACKAGE_PIN V12 IOSTANDARD LVCMOS33} [get_ports {o_led[14]}]
set_property -dict {PACKAGE_PIN V11 IOSTANDARD LVCMOS33} [get_ports {o_led[15]}]

##7 segment display
set_property -dict {PACKAGE_PIN T10 IOSTANDARD LVCMOS33} [get_ports CA]
set_property -dict {PACKAGE_PIN R10 IOSTANDARD LVCMOS33} [get_ports CB]
set_property -dict {PACKAGE_PIN K16 IOSTANDARD LVCMOS33} [get_ports CC]
set_property -dict {PACKAGE_PIN K13 IOSTANDARD LVCMOS33} [get_ports CD]
set_property -dict {PACKAGE_PIN P15 IOSTANDARD LVCMOS33} [get_ports CE]
set_property -dict {PACKAGE_PIN T11 IOSTANDARD LVCMOS33} [get_ports CF]
set_property -dict {PACKAGE_PIN L18 IOSTANDARD LVCMOS33} [get_ports CG]
set_property -dict {PACKAGE_PIN H15 IOSTANDARD LVCMOS33} [get_ports DP]

set_property -dict {PACKAGE_PIN J17 IOSTANDARD LVCMOS33} [get_ports {AN[0]}]
set_property -dict {PACKAGE_PIN J18 IOSTANDARD LVCMOS33} [get_ports {AN[1]}]
set_property -dict {PACKAGE_PIN T9 IOSTANDARD LVCMOS33} [get_ports {AN[2]}]
set_property -dict {PACKAGE_PIN J14 IOSTANDARD LVCMOS33} [get_ports {AN[3]}]
set_property -dict {PACKAGE_PIN P14 IOSTANDARD LVCMOS33} [get_ports {AN[4]}]
set_property -dict {PACKAGE_PIN T14 IOSTANDARD LVCMOS33} [get_ports {AN[5]}]
set_property -dict {PACKAGE_PIN K2 IOSTANDARD LVCMOS33} [get_ports {AN[6]}]
set_property -dict {PACKAGE_PIN U13 IOSTANDARD LVCMOS33} [get_ports {AN[7]}]

##Accelerometer
set_property -dict {PACKAGE_PIN E15 IOSTANDARD LVCMOS33} [get_ports i_accel_miso]
set_property -dict {PACKAGE_PIN F14 IOSTANDARD LVCMOS33} [get_ports o_accel_mosi]
set_property -dict {PACKAGE_PIN F15 IOSTANDARD LVCMOS33} [get_ports accel_sclk]
set_property -dict {PACKAGE_PIN D15 IOSTANDARD LVCMOS33} [get_ports o_accel_cs_n]

## Buttons
set_property -dict {PACKAGE_PIN M18 IOSTANDARD LVCMOS33} [get_ports i_btn_u]
set_property -dict {PACKAGE_PIN P18 IOSTANDARD LVCMOS33} [get_ports i_btn_d]
set_property -dict {PACKAGE_PIN P17 IOSTANDARD LVCMOS33} [get_ports i_btn_l]
set_property -dict {PACKAGE_PIN M17 IOSTANDARD LVCMOS33} [get_ports i_btn_r]
set_property -dict {PACKAGE_PIN N17 IOSTANDARD LVCMOS33} [get_ports i_btn_c]

## VGA Pins
set_property -dict {PACKAGE_PIN A3 IOSTANDARD LVCMOS33} [get_ports {RED[0]}]
set_property -dict {PACKAGE_PIN B4 IOSTANDARD LVCMOS33} [get_ports {RED[1]}]
set_property -dict {PACKAGE_PIN C5 IOSTANDARD LVCMOS33} [get_ports {RED[2]}]
set_property -dict {PACKAGE_PIN A4 IOSTANDARD LVCMOS33} [get_ports {RED[3]}]

set_property -dict {PACKAGE_PIN C6 IOSTANDARD LVCMOS33} [get_ports {GRN[0]}]
set_property -dict {PACKAGE_PIN A5 IOSTANDARD LVCMOS33} [get_ports {GRN[1]}]
set_property -dict {PACKAGE_PIN B6 IOSTANDARD LVCMOS33} [get_ports {GRN[2]}]
set_property -dict {PACKAGE_PIN A6 IOSTANDARD LVCMOS33} [get_ports {GRN[3]}]

set_property -dict {PACKAGE_PIN B7 IOSTANDARD LVCMOS33} [get_ports {BLU[0]}]
set_property -dict {PACKAGE_PIN C7 IOSTANDARD LVCMOS33} [get_ports {BLU[1]}]
set_property -dict {PACKAGE_PIN D7 IOSTANDARD LVCMOS33} [get_ports {BLU[2]}]
set_property -dict {PACKAGE_PIN D8 IOSTANDARD LVCMOS33} [get_ports {BLU[3]}]

set_property -dict {PACKAGE_PIN B11 IOSTANDARD LVCMOS33} [get_ports hsync]
set_property -dict {PACKAGE_PIN B12 IOSTANDARD LVCMOS33} [get_ports vsync]

##PWM Audio Amplifier
set_property -dict { PACKAGE_PIN A11   IOSTANDARD LVCMOS33 } [get_ports { AUD_PWM }]; #IO_L4N_T0_15 Sch=aud_pwm
set_property -dict { PACKAGE_PIN D12   IOSTANDARD LVCMOS33 } [get_ports { AUD_SD  }]; #IO_L6P_T0_15 Sch=aud_sd

##Pmod Headers
<<<<<<< HEAD

## BLE
##Pmod Header JA
=======
##Pmod Header JA -- Reserved for BLE PMOD
>>>>>>> 495912ae253251b96d8ebc4e34aba31baab968cf
set_property -dict {PACKAGE_PIN C17 IOSTANDARD LVCMOS33} [get_ports JA1]
set_property -dict {PACKAGE_PIN D18 IOSTANDARD LVCMOS33} [get_ports JA2]
set_property -dict {PACKAGE_PIN E18 IOSTANDARD LVCMOS33} [get_ports JA3]
set_property -dict {PACKAGE_PIN G17 IOSTANDARD LVCMOS33} [get_ports JA4]
set_property -dict {PACKAGE_PIN D17 IOSTANDARD LVCMOS33} [get_ports JA7]
set_property -dict {PACKAGE_PIN E17 IOSTANDARD LVCMOS33} [get_ports JA8]
set_property -dict {PACKAGE_PIN F18 IOSTANDARD LVCMOS33} [get_ports JA9]
set_property -dict {PACKAGE_PIN G18 IOSTANDARD LVCMOS33} [get_ports JA10]

## I2S2
##Pmod Header JB
set_property -dict { PACKAGE_PIN D14   IOSTANDARD LVCMOS33 } [get_ports { tx_mclk }]; #IO_L1P_T0_AD0P_15 Sch=jb[1]
set_property -dict { PACKAGE_PIN F16   IOSTANDARD LVCMOS33 } [get_ports { tx_lrck }]; #IO_L14N_T2_SRCC_15 Sch=jb[2]
set_property -dict { PACKAGE_PIN G16   IOSTANDARD LVCMOS33 } [get_ports { tx_sclk }]; #IO_L13N_T2_MRCC_15 Sch=jb[3]
set_property -dict { PACKAGE_PIN H14   IOSTANDARD LVCMOS33 } [get_ports { tx_data }]; #IO_L15P_T2_DQS_15 Sch=jb[4]
set_property -dict { PACKAGE_PIN E16   IOSTANDARD LVCMOS33 } [get_ports { rx_mclk }]; #IO_L11N_T1_SRCC_15 Sch=jb[7]
set_property -dict { PACKAGE_PIN F13   IOSTANDARD LVCMOS33 } [get_ports { rx_lrck }]; #IO_L5P_T0_AD9P_15 Sch=jb[8]
set_property -dict { PACKAGE_PIN G13   IOSTANDARD LVCMOS33 } [get_ports { rx_sclk }]; #IO_0_15 Sch=jb[9]
set_property -dict { PACKAGE_PIN H16   IOSTANDARD LVCMOS33 } [get_ports { rx_data }]; #IO_L13P_T2_MRCC_15 Sch=jb[10]

## MicroSD Reader
#Pmod Header JC
set_property -dict { PACKAGE_PIN K1    IOSTANDARD LVCMOS33 } [get_ports { CS }]; #IO_L23N_T3_35 Sch=jc[1]
set_property -dict { PACKAGE_PIN F6    IOSTANDARD LVCMOS33 } [get_ports { MOSI }]; #IO_L19N_T3_VREF_35 Sch=jc[2]
set_property -dict { PACKAGE_PIN J2    IOSTANDARD LVCMOS33 } [get_ports { MISO }]; #IO_L22N_T3_35 Sch=jc[3]
set_property -dict { PACKAGE_PIN G6    IOSTANDARD LVCMOS33 } [get_ports { SCK }]; #IO_L19P_T3_35 Sch=jc[4]
set_property -dict { PACKAGE_PIN E7    IOSTANDARD LVCMOS33 } [get_ports { DAT1 }]; #IO_L6P_T0_35 Sch=jc[7]
set_property -dict { PACKAGE_PIN J3    IOSTANDARD LVCMOS33 } [get_ports { DAT2 }]; #IO_L22P_T3_35 Sch=jc[8]
set_property -dict { PACKAGE_PIN J4    IOSTANDARD LVCMOS33 } [get_ports { CD }]; #IO_L21P_T3_DQS_35 Sch=jc[9]
##set_property -dict { PACKAGE_PIN E6    IOSTANDARD LVCMOS33 } [get_ports { (NC) }]; #IO_L5P_T0_AD13P_35 Sch=jc[10]

##Pmod Header JD -- Reserved for Raspberry Pi (contingency plan)
set_property -dict { PACKAGE_PIN H4    IOSTANDARD LVCMOS33 } [get_ports { JD1 }]; #IO_L21N_T3_DQS_35 Sch=jd[1]
# set_property -dict { PACKAGE_PIN H1    IOSTANDARD LVCMOS33 } [get_ports { JD2 }]; #IO_L17P_T2_35 Sch=jd[2]
# set_property -dict { PACKAGE_PIN G1    IOSTANDARD LVCMOS33 } [get_ports { JD3 }]; #IO_L17N_T2_35 Sch=jd[3]
# set_property -dict { PACKAGE_PIN G3    IOSTANDARD LVCMOS33 } [get_ports { JD4 }]; #IO_L20N_T3_35 Sch=jd[4]
# set_property -dict { PACKAGE_PIN H2    IOSTANDARD LVCMOS33 } [get_ports { JD7 }]; #IO_L15P_T2_DQS_35 Sch=jd[7]
# set_property -dict { PACKAGE_PIN G4    IOSTANDARD LVCMOS33 } [get_ports { JD8 }]; #IO_L20P_T3_35 Sch=jd[8]
# set_property -dict { PACKAGE_PIN G2    IOSTANDARD LVCMOS33 } [get_ports { JD9 }]; #IO_L15N_T2_DQS_35 Sch=jd[9]
# set_property -dict { PACKAGE_PIN F3    IOSTANDARD LVCMOS33 } [get_ports { JD10 }]; #IO_L13N_T2_MRCC_35 Sch=jd[10]

##Pmod Header JXADC
#set_property -dict { PACKAGE_PIN A14   IOSTANDARD LVCMOS33 } [get_ports { XA_N[1] }]; #IO_L9N_T1_DQS_AD3N_15 Sch=xa_n[1]
#set_property -dict { PACKAGE_PIN A13   IOSTANDARD LVCMOS33 } [get_ports { XA_P[1] }]; #IO_L9P_T1_DQS_AD3P_15 Sch=xa_p[1]
#set_property -dict { PACKAGE_PIN A16   IOSTANDARD LVCMOS33 } [get_ports { XA_N[2] }]; #IO_L8N_T1_AD10N_15 Sch=xa_n[2]
#set_property -dict { PACKAGE_PIN A15   IOSTANDARD LVCMOS33 } [get_ports { XA_P[2] }]; #IO_L8P_T1_AD10P_15 Sch=xa_p[2]
#set_property -dict { PACKAGE_PIN B17   IOSTANDARD LVCMOS33 } [get_ports { XA_N[3] }]; #IO_L7N_T1_AD2N_15 Sch=xa_n[3]
#set_property -dict { PACKAGE_PIN B16   IOSTANDARD LVCMOS33 } [get_ports { XA_P[3] }]; #IO_L7P_T1_AD2P_15 Sch=xa_p[3]
#set_property -dict { PACKAGE_PIN A18   IOSTANDARD LVCMOS33 } [get_ports { XA_N[4] }]; #IO_L10N_T1_AD11N_15 Sch=xa_n[4]
#set_property -dict { PACKAGE_PIN B18   IOSTANDARD LVCMOS33 } [get_ports { XA_P[4] }]; #IO_L10P_T1_AD11P_15 Sch=xa_p[4]

##Micro SD Connector
#set_property -dict { PACKAGE_PIN E2    IOSTANDARD LVCMOS33 } [get_ports { SD_RESET }]; #IO_L14P_T2_SRCC_35 Sch=sd_reset
#set_property -dict { PACKAGE_PIN A1    IOSTANDARD LVCMOS33 } [get_ports { SD_CD }]; #IO_L9N_T1_DQS_AD7N_35 Sch=sd_cd
#set_property -dict { PACKAGE_PIN B1    IOSTANDARD LVCMOS33 } [get_ports { SD_SCK }]; #IO_L9P_T1_DQS_AD7P_35 Sch=sd_sck
#set_property -dict { PACKAGE_PIN C1    IOSTANDARD LVCMOS33 } [get_ports { SD_CMD }]; #IO_L16N_T2_35 Sch=sd_cmd
#set_property -dict { PACKAGE_PIN C2    IOSTANDARD LVCMOS33 } [get_ports { SD_DAT[0] }]; #IO_L16P_T2_35 Sch=sd_dat[0]
#set_property -dict { PACKAGE_PIN E1    IOSTANDARD LVCMOS33 } [get_ports { SD_DAT[1] }]; #IO_L18N_T2_35 Sch=sd_dat[1]
#set_property -dict { PACKAGE_PIN F1    IOSTANDARD LVCMOS33 } [get_ports { SD_DAT[2] }]; #IO_L18P_T2_35 Sch=sd_dat[2]
#set_property -dict { PACKAGE_PIN D2    IOSTANDARD LVCMOS33 } [get_ports { SD_DAT[3] }]; #IO_L14N_T2_SRCC_35 Sch=sd_dat[3]


set_false_path -from [get_clocks -of_objects [get_pins clk_gen/PLLE2_BASE_inst/CLKOUT0]] -to [get_clocks -of_objects [get_pins clk_gen_75M/inst/mmcm_adv_inst/CLKOUT0]]
set_false_path -from [get_clocks -of_objects [get_pins clk_gen_75M/inst/mmcm_adv_inst/CLKOUT0]] -to [get_clocks -of_objects [get_pins clk_gen/PLLE2_BASE_inst/CLKOUT0]]


## Debug Nets
# set_property MARK_DEBUG true [get_nets swervolf/rx_done]
# set_property MARK_DEBUG true [get_nets {swervolf/rx_data[0]}]
# set_property MARK_DEBUG true [get_nets {swervolf/rx_data[1]}]
# set_property MARK_DEBUG true [get_nets {swervolf/rx_data[2]}]
# set_property MARK_DEBUG true [get_nets {swervolf/rx_data[3]}]
# set_property MARK_DEBUG true [get_nets {swervolf/rx_data[4]}]
# set_property MARK_DEBUG true [get_nets {swervolf/rx_data[5]}]
# set_property MARK_DEBUG true [get_nets {swervolf/rx_data[6]}]
# set_property MARK_DEBUG true [get_nets {swervolf/rx_data[7]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[1]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[3]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[7]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[15]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[0]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[16]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[18]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[24]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[26]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[27]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[2]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[8]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[11]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[13]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[23]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[4]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[14]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[9]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[21]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[25]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[29]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[31]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[10]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[12]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[17]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[19]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[5]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[6]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[20]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[22]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[28]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ble_accel_val[30]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[4]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[10]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[9]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[11]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[12]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[17]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[37]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[51]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[56]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[0]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[1]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[19]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[13]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[29]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[41]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[45]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[50]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[53]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[54]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[2]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[32]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[36]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[15]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[26]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[27]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[46]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[42]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[58]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[14]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[33]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[18]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[39]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[49]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[60]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[63]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[6]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[24]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[30]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[35]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[52]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[55]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[59]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[3]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[23]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[38]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[5]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[22]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[28]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[34]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[44]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[7]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[8]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[31]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[47]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[40]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[43]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[62]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[21]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[16]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[20]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[25]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[48]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[57]}]
# set_property MARK_DEBUG true [get_nets {swervolf/ascii_out[61]}]
# set_property MARK_DEBUG true [get_nets swervolf/s_tick]
# set_property MARK_DEBUG true [get_nets swervolf/drdy_tick]
# set_property MARK_DEBUG true [get_nets swervolf/srx_pad_i]
# set_property MARK_DEBUG true [get_nets swervolf/up0/err]
# set_property MARK_DEBUG true [get_nets {swervolf/up0/st_reg[0]}]
# set_property MARK_DEBUG true [get_nets {swervolf/up0/st_reg[1]}]
# set_property MARK_DEBUG true [get_nets {swervolf/up0/st_reg[2]}]
# set_property MARK_DEBUG true [get_nets {swervolf/up0/st_reg[3]}]

# create_debug_core u_ila_0 ila
# set_property ALL_PROBE_SAME_MU true [get_debug_cores u_ila_0]
# set_property ALL_PROBE_SAME_MU_CNT 1 [get_debug_cores u_ila_0]
# set_property C_ADV_TRIGGER false [get_debug_cores u_ila_0]
# set_property C_DATA_DEPTH 16384 [get_debug_cores u_ila_0]
# set_property C_EN_STRG_QUAL false [get_debug_cores u_ila_0]
# set_property C_INPUT_PIPE_STAGES 0 [get_debug_cores u_ila_0]
# set_property C_TRIGIN_EN false [get_debug_cores u_ila_0]
# set_property C_TRIGOUT_EN false [get_debug_cores u_ila_0]
# set_property port_width 1 [get_debug_ports u_ila_0/clk]
# connect_debug_port u_ila_0/clk [get_nets [list clk_core_BUFG]]
# set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe0]
# set_property port_width 64 [get_debug_ports u_ila_0/probe0]
# connect_debug_port u_ila_0/probe0 [get_nets [list {swervolf/ascii_out[0]} {swervolf/ascii_out[1]} {swervolf/ascii_out[2]} {swervolf/ascii_out[3]} {swervolf/ascii_out[4]} {swervolf/ascii_out[5]} {swervolf/ascii_out[6]} {swervolf/ascii_out[7]} {swervolf/ascii_out[8]} {swervolf/ascii_out[9]} {swervolf/ascii_out[10]} {swervolf/ascii_out[11]} {swervolf/ascii_out[12]} {swervolf/ascii_out[13]} {swervolf/ascii_out[14]} {swervolf/ascii_out[15]} {swervolf/ascii_out[16]} {swervolf/ascii_out[17]} {swervolf/ascii_out[18]} {swervolf/ascii_out[19]} {swervolf/ascii_out[20]} {swervolf/ascii_out[21]} {swervolf/ascii_out[22]} {swervolf/ascii_out[23]} {swervolf/ascii_out[24]} {swervolf/ascii_out[25]} {swervolf/ascii_out[26]} {swervolf/ascii_out[27]} {swervolf/ascii_out[28]} {swervolf/ascii_out[29]} {swervolf/ascii_out[30]} {swervolf/ascii_out[31]} {swervolf/ascii_out[32]} {swervolf/ascii_out[33]} {swervolf/ascii_out[34]} {swervolf/ascii_out[35]} {swervolf/ascii_out[36]} {swervolf/ascii_out[37]} {swervolf/ascii_out[38]} {swervolf/ascii_out[39]} {swervolf/ascii_out[40]} {swervolf/ascii_out[41]} {swervolf/ascii_out[42]} {swervolf/ascii_out[43]} {swervolf/ascii_out[44]} {swervolf/ascii_out[45]} {swervolf/ascii_out[46]} {swervolf/ascii_out[47]} {swervolf/ascii_out[48]} {swervolf/ascii_out[49]} {swervolf/ascii_out[50]} {swervolf/ascii_out[51]} {swervolf/ascii_out[52]} {swervolf/ascii_out[53]} {swervolf/ascii_out[54]} {swervolf/ascii_out[55]} {swervolf/ascii_out[56]} {swervolf/ascii_out[57]} {swervolf/ascii_out[58]} {swervolf/ascii_out[59]} {swervolf/ascii_out[60]} {swervolf/ascii_out[61]} {swervolf/ascii_out[62]} {swervolf/ascii_out[63]}]]
# create_debug_port u_ila_0 probe
# set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe1]
# set_property port_width 32 [get_debug_ports u_ila_0/probe1]
# connect_debug_port u_ila_0/probe1 [get_nets [list {swervolf/ble_accel_val[0]} {swervolf/ble_accel_val[1]} {swervolf/ble_accel_val[2]} {swervolf/ble_accel_val[3]} {swervolf/ble_accel_val[4]} {swervolf/ble_accel_val[5]} {swervolf/ble_accel_val[6]} {swervolf/ble_accel_val[7]} {swervolf/ble_accel_val[8]} {swervolf/ble_accel_val[9]} {swervolf/ble_accel_val[10]} {swervolf/ble_accel_val[11]} {swervolf/ble_accel_val[12]} {swervolf/ble_accel_val[13]} {swervolf/ble_accel_val[14]} {swervolf/ble_accel_val[15]} {swervolf/ble_accel_val[16]} {swervolf/ble_accel_val[17]} {swervolf/ble_accel_val[18]} {swervolf/ble_accel_val[19]} {swervolf/ble_accel_val[20]} {swervolf/ble_accel_val[21]} {swervolf/ble_accel_val[22]} {swervolf/ble_accel_val[23]} {swervolf/ble_accel_val[24]} {swervolf/ble_accel_val[25]} {swervolf/ble_accel_val[26]} {swervolf/ble_accel_val[27]} {swervolf/ble_accel_val[28]} {swervolf/ble_accel_val[29]} {swervolf/ble_accel_val[30]} {swervolf/ble_accel_val[31]}]]
# create_debug_port u_ila_0 probe
# set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe2]
# set_property port_width 8 [get_debug_ports u_ila_0/probe2]
# connect_debug_port u_ila_0/probe2 [get_nets [list {swervolf/rx_data[0]} {swervolf/rx_data[1]} {swervolf/rx_data[2]} {swervolf/rx_data[3]} {swervolf/rx_data[4]} {swervolf/rx_data[5]} {swervolf/rx_data[6]} {swervolf/rx_data[7]}]]
# create_debug_port u_ila_0 probe
# set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe3]
# set_property port_width 4 [get_debug_ports u_ila_0/probe3]
# connect_debug_port u_ila_0/probe3 [get_nets [list {swervolf/up0/st_reg[0]} {swervolf/up0/st_reg[1]} {swervolf/up0/st_reg[2]} {swervolf/up0/st_reg[3]}]]
# create_debug_port u_ila_0 probe
# set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe4]
# set_property port_width 1 [get_debug_ports u_ila_0/probe4]
# connect_debug_port u_ila_0/probe4 [get_nets [list swervolf/drdy_tick]]
# create_debug_port u_ila_0 probe
# set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe5]
# set_property port_width 1 [get_debug_ports u_ila_0/probe5]
# connect_debug_port u_ila_0/probe5 [get_nets [list swervolf/up0/err]]
# create_debug_port u_ila_0 probe
# set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe6]
# set_property port_width 1 [get_debug_ports u_ila_0/probe6]
# connect_debug_port u_ila_0/probe6 [get_nets [list swervolf/rx_done]]
# create_debug_port u_ila_0 probe
# set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe7]
# set_property port_width 1 [get_debug_ports u_ila_0/probe7]
# connect_debug_port u_ila_0/probe7 [get_nets [list swervolf/s_tick]]
# create_debug_port u_ila_0 probe
# set_property PROBE_TYPE DATA_AND_TRIGGER [get_debug_ports u_ila_0/probe8]
# set_property port_width 1 [get_debug_ports u_ila_0/probe8]
# connect_debug_port u_ila_0/probe8 [get_nets [list swervolf/srx_pad_i]]
# set_property C_CLK_INPUT_FREQ_HZ 300000000 [get_debug_cores dbg_hub]
# set_property C_ENABLE_CLK_DIVIDER false [get_debug_cores dbg_hub]
# set_property C_USER_SCAN_CHAIN 1 [get_debug_cores dbg_hub]
# connect_debug_port dbg_hub/clk [get_nets clk_core_BUFG]
